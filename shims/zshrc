#!/usr/bin/env zsh

echo "Load: ~/.zshrc"

#######################  zplug ###############################
source "${HOME}/.zplug/init.zsh"

zplug "sorin-ionescu/prezto"

zplug "b4b4r07/enhancd", use:init.sh

zplug load 
# zplug load --verbose


####################### prezto ###############################
#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Enable: zsh-completions
if [ -e "/usr/local/share/zsh-completions" ]; then
    fpath=(/usr/local/share/zsh-completions $fpath)
fi
if [ -e "$HOME/.zsh/completions" ]; then
	fpath=($HOME/.zsh/completions $fpath)
fi

autoload -U compinit
compinit

# Enable: History of Directory
setopt auto_pushd
# Enable: Command Auto-Fixing
setopt correct
# Disable: 'no matches found'
setopt nonomatch
# Enable: Completion dotfiles
setopt globdots

# Customize: zsh-autosuggestion
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=240"

# Customize: enhancd
ENHANCD_FILTER=fzf:fzy:peco


# Enable Vi-Edit Mode in ZLE(zsh-line-edit)
# REF: https://qiita.com/b4b4r07/items/8db0257d2e6f6b19ecb9
bindkey -v

# vi-cmd-mode を抜けるキーバインドを Ctrl-Q に変更
# REF: https://superuser.com/questions/351499/how-to-switch-comfortably-to-vi-command-mode-on-the-zsh-command-line
bindkey -M viins '^Q' vi-cmd-mode
bindkey -M viins '^A' beginning-of-line
bindkey -M viins '^K' kill-line
bindkey -M viins '^L' clear-screen
bindkey -M viins '^U' kill-whole-line


# Import from .bashrc
source ${HOME}/.bashrc


# ALIAS: Ghostscript
# zsh の gs='git stash'と干渉するため
alias gs='/usr/local/bin/gs'


# zsh-completion
if [[ ! -e "${HOME}/.zsh/completion" ]]; then
	mkdir -p "${HOME}/.zsh/completion"
fi
if [[ -e "/Applications/Docker.app/Contents/Resources/etc/docker.zsh-completion" && ! -e "${HOME}/.zsh/completion/docker" ]]; then
	ln -s "/Applications/Docker.app/Contents/Resources/etc/docker.zsh-completion" "${HOME}/.zsh/completion/docker"
fi
if [[ -e "/Applications/Docker.app/Contents/Resources/etc/docker-compose.zsh-completion" && ! -e "${HOME}/.zsh/completion/docker-compose" ]]; then
	ln -s "/Applications/Docker.app/Contents/Resources/etc/docker-compose.zsh-completion" "${HOME}/.zsh/completion/docker-compose"
fi
if [[ -e "/Applications/Docker.app/Contents/Resources/etc/docker-machine.zsh-completion" && ! -e "${HOME}/.zsh/completion/docker-machine" ]]; then
	ln -s "/Applications/Docker.app/Contents/Resources/etc/docker-machine.zsh-completion" "${HOME}/.zsh/completion/docker-machine"
fi


# fzf を使って History 検索
function select-history-fzf() {
	if type "fzf" > /dev/null 2>&1; then
		BUFFER=$(history -n -r 1 | fzf --no-sort +m --query "$LBUFFER" --prompt="[History] > ")
		CURSOR=$#BUFFER
	else
		read -p "'fzf' is not found. Do you install 'fzf' from Homebrew [y/n] ? " answer < /dev/tty
		while [[ "$answer" != "y" && "$answer" != "n" ]]; do
			read -p "'Please input 'y' or 'n': " answer < /dev/tty
		done
		if [[ "$answer" == "y" ]]; then
			brew install fzf
		fi
	fi
}
# fzy を使って History 検索
function select-history-fzy() {
	if type "fzf" > /dev/null 2>&1; then
		BUFFER=$(history -n -r 1 | fzy --query "$LBUFFER" --prompt="[History] > ")
		CURSOR=$#BUFFER

		zle reset-prompt
	else
		read -p "'fzy' is not found. Do you install 'fzy' from Homebrew [y/n] ? " answer < /dev/tty
		while [[ "$answer" != "y" && "$answer" != "n" ]]; do
			read -p "'Please input 'y' or 'n': " answer < /dev/tty
		done
		if [[ "$answer" == "y" ]]; then
			brew install fzy
		fi
	fi
}
zle -N select-history-fzf
bindkey -M viins '^r' select-history-fzf

# ls -1 -> fzf -> open
function ls-fzf-open() {
	open $(find . -type f | fzf --prompt "OPEN FILE > " --preview '[[ $(file --mime {}) =~ binary ]] && echo {} is a binary file || (highlight -O ansi {}) 2> /dev/null | head -500' )
}
zle -N ls-fzf-open
bindkey -M viins '^f' ls-fzf-open


source ~/.zplug/repos/b4b4r07/enhancd/init.sh

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
